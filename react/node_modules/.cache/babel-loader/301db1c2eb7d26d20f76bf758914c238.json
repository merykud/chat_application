{"ast":null,"code":"/*\nCopyright (c) 2012, Polyakov Vladimir, Chris Umbel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\nvar Stemmer = require('./stemmer_ru');\n\nvar PorterStemmer = new Stemmer();\nmodule.exports = PorterStemmer;\n\nfunction attemptReplacePatterns(token, patterns) {\n  var replacement = null;\n  var i = 0,\n      isReplaced = false;\n\n  while (i < patterns.length && !isReplaced) {\n    if (patterns[i][0].test(token)) {\n      replacement = token.replace(patterns[i][0], patterns[i][1]);\n      isReplaced = true;\n    }\n\n    i++;\n  }\n\n  return replacement;\n}\n\n;\n\nfunction perfectiveGerund(token) {\n  var result = attemptReplacePatterns(token, [[/[ая]в(ши|шись)$/g, ''], [/(ив|ивши|ившись|ывши|ывшись|ыв)$/g, '']]);\n  return result;\n}\n\n;\n\nfunction adjectival(token) {\n  var result = adjective(token);\n\n  if (result != null) {\n    var pariticipleResult = participle(result);\n    result = pariticipleResult ? pariticipleResult : result;\n  }\n\n  return result;\n}\n\n;\n\nfunction adjective(token) {\n  var result = attemptReplacePatterns(token, [[/(ее|ие|ые|ое|ими|ыми|ей|ий|ый|ой|ем|им|ым|ом|его|ого|ему|ому|их|ых|ую|юю|ая|яя|ою|ею)$/g, '']]);\n  return result;\n}\n\n;\n\nfunction participle(token) {\n  var result = attemptReplacePatterns(token, [[/([ая])(ем|нн|вш|ющ|щ)$/g, '$1'], [/(ивш|ывш|ующ)$/g, '']]);\n  return result;\n}\n\n;\n\nfunction reflexive(token) {\n  var result = attemptReplacePatterns(token, [[/(ся|сь)$/g, '']]);\n  return result;\n}\n\n;\n\nfunction verb(token) {\n  var result = attemptReplacePatterns(token, [[/([ая])(ла|на|ете|йте|ли|й|л|ем|н|ло|но|ет|ют|ны|ть|ешь|нно)$/g, '$1'], [/(ила|ыла|ена|ейте|уйте|ите|или|ыли|ей|уй|ил|ыл|им|ым|ен|ило|ыло|ено|ят|ует|ит|ыт|ены|ить|ыть|ишь|ую|ю)$/g, '']]);\n  return result;\n}\n\n;\n\nfunction noun(token) {\n  var result = attemptReplacePatterns(token, [[/(а|ев|ов|ие|ье|е|иями|ями|ами|еи|ии|и|ией|ей|ой|ий|й|иям|ям|ием|ем|ам|ом|о|у|ах|иях|ях|ы|ь|ию|ью|ю|ия|ья|я)$/g, '']]);\n  return result;\n}\n\n;\n\nfunction superlative(token) {\n  var result = attemptReplacePatterns(token, [[/(ейш|ейше)$/g, '']]);\n  return result;\n}\n\n;\n\nfunction derivational(token) {\n  var result = attemptReplacePatterns(token, [[/(ост|ость)$/g, '']]);\n  return result;\n}\n\n; // perform full stemming algorithm on a single word\n\nPorterStemmer.stem = function (token) {\n  token = token.toLowerCase().replace(/ё/g, 'е');\n  var volwesRegexp = /^(.*?[аеиоюяуыиэ])(.*)$/g;\n  var RV = volwesRegexp.exec(token);\n\n  if (!RV || RV.length < 3) {\n    return token;\n  }\n\n  var head = RV[1];\n  RV = RV[2];\n  volwesRegexp.lastIndex = 0;\n  var R2 = volwesRegexp.exec(RV);\n  var result = perfectiveGerund(RV);\n\n  if (result === null) {\n    var resultReflexive = reflexive(RV) || RV;\n    result = adjectival(resultReflexive);\n\n    if (result === null) {\n      result = verb(resultReflexive);\n\n      if (result === null) {\n        result = noun(resultReflexive);\n\n        if (result === null) {\n          result = resultReflexive;\n        }\n      }\n    }\n  }\n\n  result = result.replace(/и$/g, '');\n  var derivationalResult = result;\n\n  if (R2 && R2[2]) {\n    derivationalResult = derivational(R2[2]);\n\n    if (derivationalResult != null) {\n      derivationalResult = derivational(result);\n    } else {\n      derivationalResult = result;\n    }\n  }\n\n  var superlativeResult = superlative(derivationalResult) || derivationalResult;\n  superlativeResult = superlativeResult.replace(/(н)н/g, '$1');\n  superlativeResult = superlativeResult.replace(/ь$/g, '');\n  return head + superlativeResult;\n};","map":{"version":3,"sources":["/Users/merjem/chat_application/react/node_modules/natural/lib/natural/stemmers/porter_stemmer_ru.js"],"names":["Stemmer","require","PorterStemmer","module","exports","attemptReplacePatterns","token","patterns","replacement","i","isReplaced","length","test","replace","perfectiveGerund","result","adjectival","adjective","pariticipleResult","participle","reflexive","verb","noun","superlative","derivational","stem","toLowerCase","volwesRegexp","RV","exec","head","lastIndex","R2","resultReflexive","derivationalResult","superlativeResult"],"mappings":"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","sourcesContent":["/*\nCopyright (c) 2012, Polyakov Vladimir, Chris Umbel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\nvar Stemmer = require('./stemmer_ru');\n\nvar PorterStemmer = new Stemmer();\nmodule.exports = PorterStemmer;\n\nfunction attemptReplacePatterns(token, patterns) {\n\tvar replacement = null;\n\tvar i = 0, isReplaced = false;\n\twhile ((i < patterns.length) && !isReplaced) {\n\t\tif (patterns[i][0].test(token)) {\n\t\t\treplacement = token.replace(patterns[i][0], patterns[i][1]);\n\t\t\tisReplaced = true;\n\t\t}\n\t\ti++;\n\t}\n\treturn replacement;\n};\n\nfunction perfectiveGerund(token) {\n\tvar result = attemptReplacePatterns(token, [\n\t\t\t[/[ая]в(ши|шись)$/g, ''],\n\t\t\t[/(ив|ивши|ившись|ывши|ывшись|ыв)$/g, '']\n\t\t]);\n\treturn result;\n};\n\nfunction adjectival(token) {\n\tvar result = adjective(token);\n\tif (result != null) {\n\t\tvar pariticipleResult = participle(result);\n\t\tresult = pariticipleResult ? pariticipleResult : result;\n\t}\n\treturn result;\n};\n\nfunction adjective(token) {\n\tvar result = attemptReplacePatterns(token, [\n\t\t\t[/(ее|ие|ые|ое|ими|ыми|ей|ий|ый|ой|ем|им|ым|ом|его|ого|ему|ому|их|ых|ую|юю|ая|яя|ою|ею)$/g, '']\n\t\t]);\n\treturn result;\n};\n\nfunction participle(token) {\n\tvar result = attemptReplacePatterns(token, [\n\t\t[/([ая])(ем|нн|вш|ющ|щ)$/g, '$1'],\n\t\t[/(ивш|ывш|ующ)$/g, '']\n\t]);\n\treturn result;\n};\n\nfunction reflexive(token) {\n\tvar result = attemptReplacePatterns(token, [\n\t\t[/(ся|сь)$/g, '']\n\t]);\n\treturn result;\n};\n\nfunction verb(token) {\n\tvar result = attemptReplacePatterns(token, [\n\t\t[/([ая])(ла|на|ете|йте|ли|й|л|ем|н|ло|но|ет|ют|ны|ть|ешь|нно)$/g, '$1'],\n\t\t[/(ила|ыла|ена|ейте|уйте|ите|или|ыли|ей|уй|ил|ыл|им|ым|ен|ило|ыло|ено|ят|ует|ит|ыт|ены|ить|ыть|ишь|ую|ю)$/g, '']\n\t]);\n\treturn result;\n};\n\nfunction noun(token) {\n\tvar result = attemptReplacePatterns(token, [\n\t\t[/(а|ев|ов|ие|ье|е|иями|ями|ами|еи|ии|и|ией|ей|ой|ий|й|иям|ям|ием|ем|ам|ом|о|у|ах|иях|ях|ы|ь|ию|ью|ю|ия|ья|я)$/g, '']\n\t]);\n\treturn result;\n};\n\nfunction superlative (token) {\n\tvar result = attemptReplacePatterns(token, [\n\t\t[/(ейш|ейше)$/g, '']\n\t]);\n\treturn result;\n};\n\nfunction derivational (token) {\n\tvar result = attemptReplacePatterns(token, [\n\t\t[/(ост|ость)$/g, '']\n\t]);\n\treturn result;\n};\n\n// perform full stemming algorithm on a single word\nPorterStemmer.stem = function(token) {\n\ttoken = token.toLowerCase().replace(/ё/g, 'е');\n\tvar volwesRegexp = /^(.*?[аеиоюяуыиэ])(.*)$/g;\n\tvar RV = volwesRegexp.exec(token);\n\tif (!RV || RV.length < 3) {\n\t\treturn token;\n\t}\n\tvar head = RV[1];\n\tRV = RV[2];\n\tvolwesRegexp.lastIndex = 0;\n\tvar R2 = volwesRegexp.exec(RV);\n\tvar result = perfectiveGerund(RV);\n\tif (result === null) {\n\t\tvar resultReflexive = reflexive(RV) || RV;\n\t\tresult = adjectival(resultReflexive);\n\t\tif (result === null) {\n\t\t\tresult = verb(resultReflexive);\n\t\t\tif (result === null) {\n\t\t\t\tresult = noun(resultReflexive);\n\t\t\t\tif (result === null) {\n\t\t\t\t\tresult = resultReflexive;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tresult = result.replace(/и$/g, '');\n\tvar derivationalResult = result\n\tif (R2 && R2[2]) {\n\t\tderivationalResult = derivational(R2[2]);\n\t\tif (derivationalResult != null) {\n\t\t\tderivationalResult = derivational(result);\n\t\t} else {\n\t\t\tderivationalResult = result;\n\t\t}\n\t}\n\n\tvar superlativeResult = superlative(derivationalResult) || derivationalResult;\n\n\tsuperlativeResult = superlativeResult.replace(/(н)н/g, '$1');\n\tsuperlativeResult = superlativeResult.replace(/ь$/g, '');\n\treturn head + superlativeResult;\n};\n"]},"metadata":{},"sourceType":"script"}