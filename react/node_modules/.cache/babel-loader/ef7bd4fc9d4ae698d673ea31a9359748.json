{"ast":null,"code":"/*\nCopyright (c) 2011, Chris Umbel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\nvar WordNetFile = require('./wordnet_file'),\n    fs = require('fs'),\n    util = require('util');\n\nfunction getFileSize(path) {\n  var stat = fs.statSync(path);\n  return stat.size;\n}\n\nfunction findPrevEOL(fd, pos, callback) {\n  var buff = new Buffer(1024);\n  if (pos == 0) callback(0);else {\n    fs.read(fd, buff, 0, 1, pos, function (err, count) {\n      if (buff[0] == 10) callback(pos + 1);else findPrevEOL(fd, pos - 1, callback);\n    });\n  }\n}\n\nfunction readLine(fd, pos, callback) {\n  var buff = new Buffer(1024);\n  findPrevEOL(fd, pos, function (pos) {\n    WordNetFile.appendLineChar(fd, pos, 0, buff, callback);\n  });\n}\n\nfunction miss(callback) {\n  callback({\n    status: 'miss'\n  });\n}\n\nfunction findAt(fd, size, pos, lastPos, adjustment, searchKey, callback, lastKey) {\n  if (lastPos == pos || pos >= size) {\n    miss(callback);\n  } else {\n    readLine(fd, pos, function (line) {\n      var tokens = line.split(/\\s+/);\n      var key = tokens[0];\n\n      if (key == searchKey) {\n        callback({\n          status: 'hit',\n          key: key,\n          'line': line,\n          tokens: tokens\n        });\n      } else if (adjustment == 1 || key == lastKey) {\n        miss(callback);\n      } else {\n        adjustment = Math.ceil(adjustment * 0.5);\n\n        if (key < searchKey) {\n          findAt(fd, size, pos + adjustment, pos, adjustment, searchKey, callback, key);\n        } else {\n          findAt(fd, size, pos - adjustment, pos, adjustment, searchKey, callback, key);\n        }\n      }\n    });\n  }\n}\n\nfunction find(searchKey, callback) {\n  var indexFile = this;\n  indexFile.open(function (err, fd, done) {\n    if (err) {\n      console.log(err);\n    } else {\n      var size = getFileSize(indexFile.filePath) - 1;\n      var pos = Math.ceil(size / 2);\n      findAt(fd, size, pos, null, pos, searchKey, function (result) {\n        callback(result);\n        done();\n      });\n    }\n  });\n}\n\nfunction lookupFromFile(word, callback) {\n  this.find(word, function (record) {\n    var indexRecord = null;\n\n    if (record.status == 'hit') {\n      var ptrs = [],\n          offsets = [];\n\n      for (var i = 0; i < parseInt(record.tokens[3]); i++) ptrs.push(record.tokens[i]);\n\n      for (var i = 0; i < parseInt(record.tokens[2]); i++) offsets.push(parseInt(record.tokens[ptrs.length + 6 + i], 10));\n\n      indexRecord = {\n        lemma: record.tokens[0],\n        pos: record.tokens[1],\n        ptrSymbol: ptrs,\n        senseCnt: parseInt(record.tokens[ptrs.length + 4], 10),\n        tagsenseCnt: parseInt(record.tokens[ptrs.length + 5], 10),\n        synsetOffset: offsets\n      };\n    }\n\n    callback(indexRecord);\n  });\n}\n\nfunction lookup(word, callback) {\n  this.lookupFromFile(word, callback);\n}\n\nvar IndexFile = function (dataDir, name) {\n  WordNetFile.call(this, dataDir, 'index.' + name);\n};\n\nutil.inherits(IndexFile, WordNetFile);\nIndexFile.prototype.lookupFromFile = lookupFromFile;\nIndexFile.prototype.lookup = lookup;\nIndexFile.prototype.find = find;\nIndexFile.prototype._findAt = findAt;\nmodule.exports = IndexFile;","map":{"version":3,"sources":["/Users/merjem/chat_application/react/node_modules/natural/lib/natural/wordnet/index_file.js"],"names":["WordNetFile","require","fs","util","getFileSize","path","stat","statSync","size","findPrevEOL","fd","pos","callback","buff","Buffer","read","err","count","readLine","appendLineChar","miss","status","findAt","lastPos","adjustment","searchKey","lastKey","line","tokens","split","key","Math","ceil","find","indexFile","open","done","console","log","filePath","result","lookupFromFile","word","record","indexRecord","ptrs","offsets","i","parseInt","push","length","lemma","ptrSymbol","senseCnt","tagsenseCnt","synsetOffset","lookup","IndexFile","dataDir","name","call","inherits","prototype","_findAt","module","exports"],"mappings":"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","sourcesContent":["/*\nCopyright (c) 2011, Chris Umbel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\n\nvar WordNetFile = require('./wordnet_file'),\n  fs = require('fs'),\n  util = require('util');\n\nfunction getFileSize(path) {\n  var stat = fs.statSync(path);\n  return stat.size;\n}\n\nfunction findPrevEOL(fd, pos, callback) {\n  var buff = new Buffer(1024);\n  if(pos == 0)\n    callback(0);\n  else {\n    fs.read(fd, buff, 0, 1, pos, function(err, count) {\n      if(buff[0] == 10)\n        callback(pos + 1);\n      else\n        findPrevEOL(fd, pos - 1, callback);\n    });\n  }\n}\n\nfunction readLine(fd, pos, callback) {\n  var buff = new Buffer(1024);\n  findPrevEOL(fd, pos, function(pos) {\n    WordNetFile.appendLineChar(fd, pos, 0, buff, callback);\n  });\n}\n\nfunction miss(callback) {\n  callback({status: 'miss'});\n}\n\nfunction findAt(fd, size, pos, lastPos, adjustment, searchKey, callback, lastKey) {\n  if (lastPos == pos || pos >= size) {\n    miss(callback);\n  } else {\n    readLine(fd, pos, function(line) {\n      var tokens = line.split(/\\s+/);\n      var key = tokens[0];\n\n    if(key == searchKey) {\n        callback({status: 'hit', key: key, 'line': line, tokens: tokens});\n      } else if(adjustment == 1 || key == lastKey)  {\n        miss(callback);\n      } else {\n        adjustment = Math.ceil(adjustment * 0.5);\n\n        if (key < searchKey) {\n          findAt(fd, size, pos + adjustment, pos, adjustment, searchKey, callback, key);\n        } else {\n          findAt(fd, size, pos - adjustment, pos, adjustment, searchKey, callback, key);\n        }\n      }\n    });\n  }\n}\n\nfunction find(searchKey, callback) {\n  var indexFile = this;\n\n  indexFile.open(function(err, fd, done) {\n    if(err) {\n      console.log(err);\n    } else {\n      var size = getFileSize(indexFile.filePath) - 1;\n      var pos = Math.ceil(size / 2);\n      findAt(fd, size, pos, null, pos, searchKey,\n        function(result) { callback(result); done(); });\n    }\n  });\n}\n\nfunction lookupFromFile(word, callback) {\n  this.find(word, function(record) {\n    var indexRecord = null;\n\n    if(record.status == 'hit') {\n      var ptrs = [], offsets = [];\n\n      for(var i = 0; i < parseInt(record.tokens[3]); i++)\n        ptrs.push(record.tokens[i]);\n\n      for(var i = 0; i < parseInt(record.tokens[2]); i++)\n        offsets.push(parseInt(record.tokens[ptrs.length + 6 + i], 10));\n\n      indexRecord = {\n        lemma: record.tokens[0],\n        pos: record.tokens[1],\n        ptrSymbol: ptrs,\n        senseCnt:  parseInt(record.tokens[ptrs.length + 4], 10),\n        tagsenseCnt:  parseInt(record.tokens[ptrs.length + 5], 10),\n        synsetOffset:  offsets\n      };\n    }\n\n    callback(indexRecord);\n  });\n}\n\nfunction lookup(word, callback) {\n  this.lookupFromFile(word, callback);\n}\n\nvar IndexFile = function(dataDir, name) {\n  WordNetFile.call(this, dataDir, 'index.' + name);\n};\n\nutil.inherits(IndexFile, WordNetFile);\n\nIndexFile.prototype.lookupFromFile = lookupFromFile;\nIndexFile.prototype.lookup = lookup;\nIndexFile.prototype.find = find;\n\nIndexFile.prototype._findAt = findAt;\n\nmodule.exports = IndexFile;\n"]},"metadata":{},"sourceType":"script"}